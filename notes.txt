Big Topics:
- Rendering Engine


- Some way to insert game into engine
- Better scratchpad/sandbox support
- Better textures (reading, blitting, basic image processing)
- Some way to separate game and engine data
- Add higher level rendering constructs
    (Shaders, Materials, Transforms, Meshes)
    Avoid managing low-level rendering.
- Add some form of automatic shader selection
- Add some form of primitives
    (Rectangles, spheres, triangles)
- More flexible transform class (default values for projection and camera)
    We shouldn't need to set up: perspective projection, camera
- Non-perspective views: (orthogonal views)
- Texture manipulation (Translation, rotation, scale)
- More control over textures (Filtering, formatting)
- More friendly constructors
- Windows should have more properties (Center position, fullscreen, maybe mouse locking)
- Better vector math (normalization, +=, commonly used Vector constants, swizzling support)
- Options class/system, some place to read values that the player chooses
- Centralized "level" or "scene" class that holds the data the game is using
- Game object class
- Make all positioning names "position"
- Make naming more consistent
- Make all time based on seconds rather than nanoseconds
- Give vectors a copy constructor
- Give vectors an interpolation method

- Eventually, make easier way to generate mesh
- Eventually, make easy way of generating texture coordinates